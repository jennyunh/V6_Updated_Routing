{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/HighlightedQuote.module.css","components/UI/Card.module.css","components/layout/Layout.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","hooks/use-http.js","lib/api.js","pages/AllQuotes.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","pages/NotFound.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","navigate","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","quote","LoadingSpinner","spinner","NoQuotesFound","noquotes","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuotes","loadedQuotes","useEffect","length","HighlightedQuote","QuoteDetail","useParams","Card","card","children","QuoteForm","useState","setIsEntering","authorInputRef","useRef","textInputRef","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","NotFound","MainNavigation","header","logo","nav","navData","isActive","active","Layout","main","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","loadedComments","addedCommentHandler","App","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07708e93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__AqDmx\",\"loading\":\"QuoteForm_loading__2vqjk\",\"control\":\"QuoteForm_control__1MCq7\",\"actions\":\"QuoteForm_actions__2IGbx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3-vkQ\",\"logo\":\"MainNavigation_logo__19ZGI\",\"nav\":\"MainNavigation_nav__2p32c\",\"active\":\"MainNavigation_active__wWoxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1SU-7\",\"loading\":\"NewCommentForm_loading__37YFZ\",\"control\":\"NewCommentForm_control__2r2JV\",\"actions\":\"NewCommentForm_actions__23q7T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__hH_U4\",\"sorting\":\"QuoteList_sorting__ulNdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__3Y6Ac\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2muCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2iQZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1Avu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2qL7O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__246l0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3ma7K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1qdba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__9cUT-\"};","import { Link } from 'react-router-dom';\r\n\r\nimport classes from './QuoteItem.module.css';\r\n\r\nconst QuoteItem = (props) => {\r\n  return (\r\n    <li className={classes.item}>\r\n      <figure>\r\n        <blockquote>\r\n          <p>{props.text}</p>\r\n        </blockquote>\r\n        <figcaption>{props.author}</figcaption>\r\n      </figure>\r\n      <Link className='btn' to={`/quotes/${props.id}`}>\r\n        View Fullscreen\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default QuoteItem;\r\n","import { Fragment } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nimport QuoteItem from './QuoteItem';\r\nimport classes from './QuoteList.module.css';\r\n\r\nconst sortQuotes = (quotes, ascending) => {\r\n  return quotes.sort((quoteA, quoteB) => {\r\n    if (ascending) {\r\n      return quoteA.id > quoteB.id ? 1 : -1;\r\n    } else {\r\n      return quoteA.id < quoteB.id ? 1 : -1;\r\n    }\r\n  });\r\n};\r\n\r\nconst QuoteList = (props) => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const queryParams = new URLSearchParams(location.search);\r\n\r\n  const isSortingAscending = queryParams.get('sort') === 'asc';\r\n\r\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\r\n\r\n  const changeSortingHandler = () => {\r\n    navigate(location.pathname, {\r\n      search: `?sort=${isSortingAscending ? 'desc' : 'asc'}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.sorting}>\r\n        <button onClick={changeSortingHandler}>\r\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}\r\n        </button>\r\n      </div>\r\n      <ul className={classes.list}>\r\n        {sortedQuotes.map((quote) => (\r\n          <QuoteItem\r\n            key={quote.id}\r\n            id={quote.id}\r\n            author={quote.author}\r\n            text={quote.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteList;\r\n","import classes from './LoadingSpinner.module.css';\r\n\r\nconst LoadingSpinner = () => {\r\n  return <div className={classes.spinner}></div>;\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import { Link } from 'react-router-dom';\r\n\r\nimport classes from './NoQuotesFound.module.css';\r\n\r\nconst NoQuotesFound = () => {\r\n  return (\r\n    <div className={classes.noquotes}>\r\n      <p>No quotes found!</p>\r\n      <Link className='btn' to='/new-quote'>\r\n        Add a Quote\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoQuotesFound;\r\n","import { useReducer, useCallback } from 'react';\r\n\r\nfunction httpReducer(state, action) {\r\n  if (action.type === 'SEND') {\r\n    return {\r\n      data: null,\r\n      error: null,\r\n      status: 'pending',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'SUCCESS') {\r\n    return {\r\n      data: action.responseData,\r\n      error: null,\r\n      status: 'completed',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'ERROR') {\r\n    return {\r\n      data: null,\r\n      error: action.errorMessage,\r\n      status: 'completed',\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction useHttp(requestFunction, startWithPending = false) {\r\n  const [httpState, dispatch] = useReducer(httpReducer, {\r\n    status: startWithPending ? 'pending' : null,\r\n    data: null,\r\n    error: null,\r\n  });\r\n\r\n  const sendRequest = useCallback(\r\n    async function (requestData) {\r\n      dispatch({ type: 'SEND' });\r\n      try {\r\n        const responseData = await requestFunction(requestData);\r\n        dispatch({ type: 'SUCCESS', responseData });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: 'ERROR',\r\n          errorMessage: error.message || 'Something went wrong!',\r\n        });\r\n      }\r\n    },\r\n    [requestFunction]\r\n  );\r\n\r\n  return {\r\n    sendRequest,\r\n    ...httpState,\r\n  };\r\n}\r\n\r\nexport default useHttp;\r\n","const FIREBASE_DOMAIN = 'https://react-complete-7681e-default-rtdb.firebaseio.com';\r\n\r\nexport async function getAllQuotes() {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not fetch quotes.');\r\n  }\r\n\r\n  const transformedQuotes = [];\r\n\r\n  for (const key in data) {\r\n    const quoteObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedQuotes.push(quoteObj);\r\n  }\r\n\r\n  return transformedQuotes;\r\n}\r\n\r\nexport async function getSingleQuote(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not fetch quote.');\r\n  }\r\n\r\n  const loadedQuote = {\r\n    id: quoteId,\r\n    ...data,\r\n  };\r\n\r\n  return loadedQuote;\r\n}\r\n\r\nexport async function addQuote(quoteData) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(quoteData),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not create quote.');\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function addComment(requestData) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(requestData.commentData),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not add comment.');\r\n  }\r\n\r\n  return { commentId: data.name };\r\n}\r\n\r\nexport async function getAllComments(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not get comments.');\r\n  }\r\n\r\n  const transformedComments = [];\r\n\r\n  for (const key in data) {\r\n    const commentObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedComments.push(commentObj);\r\n  }\r\n\r\n  return transformedComments;\r\n}\r\n","import { useEffect } from 'react';\r\n\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\n\r\nconst AllQuotes = () => {\r\n  const { sendRequest, status, data: loadedQuotes, error } = useHttp(\r\n    getAllQuotes,\r\n    true\r\n  );\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className='centered focused'>{error}</p>;\r\n  }\r\n\r\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n","import classes from './HighlightedQuote.module.css';\r\n\r\nconst HighlightedQuote = (props) => {\r\n  return (\r\n    <figure className={classes.quote}>\r\n      <p>{props.text}</p>\r\n      <figcaption>{props.author}</figcaption>\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default HighlightedQuote;\r\n","import { Fragment, useEffect } from 'react';\r\nimport { useParams, Outlet } from 'react-router-dom';\r\n\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n\r\n  const { quoteId } = params;\r\n\r\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(\r\n    getSingleQuote,\r\n    true\r\n  );\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className='centered'>{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Outlet />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","import classes from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import { Fragment, useRef, useState } from 'react';\r\n// import { Prompt } from 'react-router-dom';\r\n\r\nimport Card from '../UI/Card';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport classes from './QuoteForm.module.css';\r\n\r\nconst QuoteForm = (props) => {\r\n  const [isEntering, setIsEntering] = useState(false);\r\n\r\n  const authorInputRef = useRef();\r\n  const textInputRef = useRef();\r\n\r\n  function submitFormHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredAuthor = authorInputRef.current.value;\r\n    const enteredText = textInputRef.current.value;\r\n\r\n    // optional: Could validate here\r\n\r\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\r\n  }\r\n\r\n  const finishEnteringHandler = () => {\r\n    setIsEntering(false);\r\n  };\r\n\r\n  const formFocusedHandler = () => {\r\n    setIsEntering(true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* Prompt is currently not supported yet by v6 */}\r\n      {/* <Prompt\r\n        when={isEntering}\r\n        message={(location) =>\r\n          'Are you sure you want to leave? All your entered data will be lost!'\r\n        }\r\n      /> */}\r\n      <Card>\r\n        <form\r\n          onFocus={formFocusedHandler}\r\n          className={classes.form}\r\n          onSubmit={submitFormHandler}\r\n        >\r\n          {props.isLoading && (\r\n            <div className={classes.loading}>\r\n              <LoadingSpinner />\r\n            </div>\r\n          )}\r\n\r\n          <div className={classes.control}>\r\n            <label htmlFor='author'>Author</label>\r\n            <input type='text' id='author' ref={authorInputRef} />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor='text'>Text</label>\r\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteForm;\r\n","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (status === 'completed') {\r\n      navigate('/quotes');\r\n    }\r\n  }, [status, navigate]);\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n\r\n  return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />;\r\n};\r\n\r\nexport default NewQuote;\r\n","const NotFound = () => {\r\n  return (\r\n    <div className='centered'>\r\n      <p>Page not found!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './MainNavigation.module.css';\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to='/quotes' className={navData => navData.isActive ? classes.active : '' }>\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to='/new-quote' className={navData => navData.isActive ? classes.active : '' }>\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { Fragment } from 'react';\r\n\r\nimport classes from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation';\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { useRef, useEffect } from 'react';\r\n\r\nimport useHttp from '../../hooks/use-http';\r\nimport { addComment } from '../../lib/api';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport classes from './NewCommentForm.module.css';\r\n\r\nconst NewCommentForm = (props) => {\r\n  const commentTextRef = useRef();\r\n\r\n  const { sendRequest, status, error } = useHttp(addComment);\r\n\r\n  const { onAddedComment } = props;\r\n\r\n  useEffect(() => {\r\n    if (status === 'completed' && !error) {\r\n      onAddedComment();\r\n    }\r\n  }, [status, error, onAddedComment]);\r\n\r\n  const submitFormHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredText = commentTextRef.current.value;\r\n\r\n    // optional: Could validate here\r\n\r\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={submitFormHandler}>\r\n      {status === 'pending' && (\r\n        <div className='centered'>\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      <div className={classes.control} onSubmit={submitFormHandler}>\r\n        <label htmlFor='comment'>Your Comment</label>\r\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button className='btn'>Add Comment</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewCommentForm;\r\n","import classes from './CommentItem.module.css';\r\n\r\nconst CommentItem = (props) => {\r\n  return (\r\n    <li className={classes.item}>\r\n      <p>{props.text}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CommentItem;\r\n","import CommentItem from './CommentItem';\r\nimport classes from './CommentsList.module.css';\r\n\r\nconst CommentsList = (props) => {\r\n  return (\r\n    <ul className={classes.comments}>\r\n      {props.comments.map((comment) => (\r\n        <CommentItem key={comment.id} text={comment.text} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CommentsList;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport classes from './Comments.module.css';\r\nimport NewCommentForm from './NewCommentForm';\r\nimport useHttp from '../../hooks/use-http';\r\nimport { getAllComments } from '../../lib/api';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport CommentsList from './CommentsList';\r\n\r\nconst Comments = () => {\r\n  const [isAddingComment, setIsAddingComment] = useState(false);\r\n  const params = useParams();\r\n\r\n  const { quoteId } = params;\r\n\r\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [quoteId, sendRequest]);\r\n\r\n  const startAddCommentHandler = () => {\r\n    setIsAddingComment(true);\r\n  };\r\n\r\n  const addedCommentHandler = useCallback(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  let comments;\r\n\r\n  if (status === 'pending') {\r\n    comments = (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\r\n    comments = <CommentsList comments={loadedComments} />;\r\n  }\r\n\r\n  if (\r\n    status === 'completed' &&\r\n    (!loadedComments || loadedComments.length === 0)\r\n  ) {\r\n    comments = <p className='centered'>No comments were added yet!</p>;\r\n  }\r\n\r\n  return (\r\n    <section className={classes.comments}>\r\n      <h2>User Comments</h2>\r\n      {!isAddingComment && (\r\n        <button className='btn' onClick={startAddCommentHandler}>\r\n          Add a Comment\r\n        </button>\r\n      )}\r\n      {isAddingComment && (\r\n        <NewCommentForm\r\n          quoteId={quoteId}\r\n          onAddedComment={addedCommentHandler}\r\n        />\r\n      )}\r\n      {comments}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import { Route, Routes, Navigate, Link } from 'react-router-dom';\r\n\r\nimport AllQuotes from './pages/AllQuotes';\r\nimport QuoteDetail from './pages/QuoteDetail';\r\nimport NewQuote from './pages/NewQuote';\r\nimport NotFound from './pages/NotFound';\r\nimport Layout from './components/layout/Layout';\r\nimport Comments from './components/comments/Comments';\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout>\r\n      <Routes>\r\n        <Route path='/' element={<Navigate replace to='/quotes' />} />\r\n        <Route path='/quotes' element={<AllQuotes />} />\r\n        <Route path='/quotes/:quoteId' element={<QuoteDetail />}>\r\n          <Route\r\n            path=''\r\n            element={\r\n              <div className='centered'>\r\n                <Link className='btn--flat' to={`comments`}>\r\n                  Load Comments\r\n                </Link>\r\n              </div>\r\n            }\r\n          />\r\n          <Route path={`comments`} element={<Comments />} />\r\n        </Route>\r\n        <Route path='/new-quote' element={<NewQuote />} />\r\n        <Route path='*' element={<NotFound />} />\r\n      </Routes>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}